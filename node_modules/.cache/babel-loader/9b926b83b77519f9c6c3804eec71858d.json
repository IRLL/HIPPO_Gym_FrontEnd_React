{"ast":null,"code":"\"use strict\";\n\nconst uuidParse = require('uuid-parse');\n\nconst isUUID = require('validator/lib/isUUID');\n\nmodule.exports = (uuidString, addLeadingZero = false) => {\n  if (!isUUID(uuidString)) {\n    throw new Error('uuidString is not valid UUID', 0);\n  } //Allocate 16 bytes for the uuid bytes representation\n\n\n  let uuidBuffer = Buffer.alloc(16); //Parse uuid string representation and send bytes into buffer\n\n  uuidParse.parse(uuidString, uuidBuffer); //Create strict uuid hex representation\n\n  const uuidHex = uuidBuffer.toString('hex');\n  return addLeadingZero ? '0x' + uuidHex : uuidHex;\n};","map":{"version":3,"sources":["/Charlie/Dropbox/Development/IRLL/hippoGym/Front/node_modules/uuid-to-hex/index.js"],"names":["uuidParse","require","isUUID","module","exports","uuidString","addLeadingZero","Error","uuidBuffer","Buffer","alloc","parse","uuidHex","toString"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,sBAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,UAAD,EAAaC,cAAc,GAAG,KAA9B,KAAwC;AACrD,MAAI,CAACJ,MAAM,CAACG,UAAD,CAAX,EAAyB;AACrB,UAAM,IAAIE,KAAJ,CAAU,8BAAV,EAA0C,CAA1C,CAAN;AACH,GAHoD,CAKrD;;;AACA,MAAIC,UAAU,GAAGC,MAAM,CAACC,KAAP,CAAa,EAAb,CAAjB,CANqD,CAQrD;;AACAV,EAAAA,SAAS,CAACW,KAAV,CAAgBN,UAAhB,EAA4BG,UAA5B,EATqD,CAWrD;;AACA,QAAMI,OAAO,GAAGJ,UAAU,CAACK,QAAX,CAAoB,KAApB,CAAhB;AACA,SAAOP,cAAc,GAAG,OAAOM,OAAV,GAAoBA,OAAzC;AACH,CAdD","sourcesContent":["\"use strict\";\n\nconst uuidParse = require('uuid-parse');\nconst isUUID = require('validator/lib/isUUID');\n\nmodule.exports = (uuidString, addLeadingZero = false) => {\n    if (!isUUID(uuidString)) {\n        throw new Error('uuidString is not valid UUID', 0);\n    }\n\n    //Allocate 16 bytes for the uuid bytes representation\n    let uuidBuffer = Buffer.alloc(16);\n\n    //Parse uuid string representation and send bytes into buffer\n    uuidParse.parse(uuidString, uuidBuffer);\n\n    //Create strict uuid hex representation\n    const uuidHex = uuidBuffer.toString('hex');\n    return addLeadingZero ? '0x' + uuidHex : uuidHex;\n};"]},"metadata":{},"sourceType":"script"}