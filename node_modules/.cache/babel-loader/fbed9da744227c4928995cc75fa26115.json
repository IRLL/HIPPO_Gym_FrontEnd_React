{"ast":null,"code":"import _createForOfIteratorHelper from\"/Charlie/Dropbox/Development/IRLL/hippoGym/Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/Charlie/Dropbox/Development/IRLL/hippoGym/Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Charlie/Dropbox/Development/IRLL/hippoGym/Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Charlie/Dropbox/Development/IRLL/hippoGym/Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Charlie/Dropbox/Development/IRLL/hippoGym/Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import\"antd/dist/antd.css\";import'./main.css';import axios from'axios';import{Spin}from'antd';import Header from'./components/header';import Footer from'./components/footer';import Forum from'./components/forum';import Game from'./components/game';import{RLAPI,PROJECT_ID,USER_ID}from'./utils/constants';var Main=/*#__PURE__*/function(_React$Component){_inherits(Main,_React$Component);var _super=_createSuper(Main);function Main(){var _this;_classCallCheck(this,Main);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={formContent:\"\",//html content\nuserId:USER_ID,projectId:PROJECT_ID,isLoading:true,//used to wait for http requests finished\nisGame:false,//if current page is the game page\nisWait:false,//if the websocket server has been resolved\nisEnd:false//if the game is ended\n};_this.fetchFormData=function(){axios.get(RLAPI,{params:{projectId:_this.state.projectId,userId:_this.state.userId}}).then(function(res){//\"show_game_page\" means the next page will be the game page\nif(res.data===\"show_game_page\"){_this.setState({isGame:true,isWait:false});//\"wait\" means the websocket's DNS has not been resolved yet\n}else if(res.data!==\"wait\"){_this.setState({formContent:res.data,isLoading:false});}});};_this.gameEndHandler=function(){//change the game status\n_this.setState({isGame:false,isEnd:true});//fetch the content of next page\n_this.fetchFormData();};_this.handleSubmit=function(event){_this.setState({isLoading:true});//collect the user's input from the forum\nvar form=event.target;var data={};var _iterator=_createForOfIteratorHelper(form.elements),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var element=_step.value;if(element.tagName==='BUTTON'){continue;}data[element.name]=element.value;}//submit the user's input by sending the POST requests\n}catch(err){_iterator.e(err);}finally{_iterator.f();}axios.post(RLAPI,data,{params:{projectId:_this.state.projectId,userId:_this.state.userId}}).then(function(res){//\"show_game_page\" means the websocket's DNS has been resolved\n//ready to go to the game page\nif(res.data===\"show_game_page\"){_this.setState({isGame:true});}else if(res.data===\"wait\"){//we check if the websocket's DNS has been resolved periodically\n//for every 30 seconds \n_this.wait=setInterval(function(){if(!_this.state.isGame){_this.fetchFormData();}},30000);_this.setState({isWait:true});}else{_this.setState({formContent:res.data,isLoading:false});}}).catch(function(error){console.log(error);});};return _this;}_createClass(Main,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchFormData();}//send GET requests to api endpoint\n//fetch html content of each page\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearTimeout(this.wait);}},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,formContent=_this$state.formContent,isGame=_this$state.isGame,isWait=_this$state.isWait,isEnd=_this$state.isEnd;var preGame=/*#__PURE__*/React.createElement(\"div\",{className:\"forumContainer\"},isLoading?/*#__PURE__*/React.createElement(Spin,{className:\"Loader\",size:\"large\",tip:isWait?\"Waitting for the robot to wake up, please wait ...\":\"Loading next step, please wait ...\"}):/*#__PURE__*/React.createElement(Forum,{content:formContent,action:this.handleSubmit,isEnd:isEnd}));return/*#__PURE__*/React.createElement(\"div\",{className:\"mainContainer\"},/*#__PURE__*/React.createElement(Header,null),!isGame?preGame:/*#__PURE__*/React.createElement(Game,{action:this.gameEndHandler}),/*#__PURE__*/React.createElement(Footer,null));}}]);return Main;}(React.Component);export default Main;","map":{"version":3,"sources":["/Charlie/Dropbox/Development/IRLL/hippoGym/Front/src/main.js"],"names":["React","axios","Spin","Header","Footer","Forum","Game","RLAPI","PROJECT_ID","USER_ID","Main","state","formContent","userId","projectId","isLoading","isGame","isWait","isEnd","fetchFormData","get","params","then","res","data","setState","gameEndHandler","handleSubmit","event","form","target","elements","element","tagName","name","value","post","wait","setInterval","catch","error","console","log","clearTimeout","preGame","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"antd/dist/antd.css\";\nimport './main.css';\nimport axios from 'axios';\nimport {Spin} from 'antd';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Forum from './components/forum';\nimport Game from './components/game';\nimport {RLAPI, PROJECT_ID, USER_ID} from './utils/constants';\n\nclass Main extends React.Component{\n\n    state = {\n        formContent : \"\",        //html content\n        userId : USER_ID,\n        projectId : PROJECT_ID,\n        isLoading : true,        //used to wait for http requests finished\n        isGame : false,          //if current page is the game page\n        isWait : false,          //if the websocket server has been resolved\n        isEnd : false,           //if the game is ended\n    }\n\n    componentDidMount(){\n        this.fetchFormData();\n    }\n\n    //send GET requests to api endpoint\n    //fetch html content of each page\n    fetchFormData = () => {\n        axios.get(RLAPI,{\n            params : {\n                projectId : this.state.projectId,\n                userId : this.state.userId\n            }\n        }).then(res => {\n            //\"show_game_page\" means the next page will be the game page\n            if(res.data === \"show_game_page\"){\n                this.setState(({\n                    isGame : true,\n                    isWait : false\n                }))\n            //\"wait\" means the websocket's DNS has not been resolved yet\n            }else if(res.data !== \"wait\"){\n                this.setState(({\n                    formContent : res.data,\n                    isLoading : false\n                }))\n            }\n        })\n    }\n\n    gameEndHandler = () =>{\n        //change the game status\n        this.setState(({\n            isGame : false,\n            isEnd : true\n        }))\n        //fetch the content of next page\n        this.fetchFormData();\n    }\n\n    handleSubmit = (event) => {\n        this.setState(({\n            isLoading : true\n        }))\n\n        //collect the user's input from the forum\n        const form = event.target;\n        const data = {}\n        for (let element of form.elements) {\n          if (element.tagName === 'BUTTON') { continue; }\n          data[element.name] = element.value;\n        }\n\n        //submit the user's input by sending the POST requests\n        axios.post(RLAPI,data,{\n            params : {\n                projectId : this.state.projectId,\n                userId : this.state.userId\n            }\n        }).then(res => {\n            //\"show_game_page\" means the websocket's DNS has been resolved\n            //ready to go to the game page\n            if(res.data === \"show_game_page\"){\n                this.setState(({\n                    isGame : true,\n                }))\n            }else if(res.data === \"wait\"){\n                //we check if the websocket's DNS has been resolved periodically\n                //for every 30 seconds \n                this.wait = setInterval(() => {\n                    if(!this.state.isGame){\n                        this.fetchFormData();\n                    }\n                },30000)\n                this.setState(({\n                    isWait : true\n                }))\n            }else{\n                this.setState(({\n                    formContent : res.data,\n                    isLoading : false\n                }))\n            }\n        }).catch(function (error) {\n            console.log(error)\n          });\n    }\n\n    componentWillUnmount(){\n        clearTimeout(this.wait);\n    }\n\n    render(){\n        const {isLoading,formContent,isGame,isWait, isEnd} = this.state;\n\n        const preGame = <div className=\"forumContainer\">\n                            {isLoading ? \n                            <Spin className=\"Loader\" size = \"large\" tip={isWait ?  \n                                \"Waitting for the robot to wake up, please wait ...\" :\n                                \"Loading next step, please wait ...\"} \n                            /> :\n                            <Forum content={formContent} action={this.handleSubmit} isEnd={isEnd}/> \n                            }\n                        </div>\n                            \n        return (\n            <div className=\"mainContainer\">\n                <Header />\n                {!isGame ? preGame : <Game action={this.gameEndHandler} />}\n                <Footer />\n            </div>   \n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}