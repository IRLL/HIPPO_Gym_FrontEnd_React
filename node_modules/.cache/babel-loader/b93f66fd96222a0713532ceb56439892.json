{"ast":null,"code":"var _jsxFileName = \"/Charlie/Dropbox/Development/IRLL/hippoGym/Front/src/main.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport './main.css';\nimport axios from 'axios';\nimport { Spin } from 'antd';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Forum from './components/forum';\nimport Game from './components/game';\nimport { RLAPI, PROJECT_ID, USER_ID } from './utils/constants';\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formContent: \"\",\n      userId: USER_ID,\n      projectId: PROJECT_ID,\n      isLoading: true,\n      isGame: false\n    };\n\n    this.fetchData = () => {\n      axios.get(RLAPI, {\n        params: {\n          projectId: this.state.projectId,\n          userId: this.state.userId\n        }\n      }).then(res => {\n        this.setState({\n          formContent: res.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        isLoading: true\n      });\n      const form = event.target;\n      const data = {};\n\n      for (let element of form.elements) {\n        if (element.tagName === 'BUTTON') {\n          continue;\n        }\n\n        data[element.name] = element.value;\n      }\n\n      axios.post(RLAPI, data, {\n        params: {\n          projectId: this.state.projectId,\n          userId: this.state.userId\n        }\n      }).then(res => {\n        if (res.data === \"pre-game end\") {\n          this.setState({\n            isLoading: true,\n            isGame: true\n          });\n        } else {\n          this.setState({\n            formContent: res.data,\n            isLoading: false\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const {\n      isLoading,\n      formContent,\n      isGame\n    } = this.state;\n    const preGame = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forumContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(Spin, {\n      className: \"Loader\",\n      size: \"large\",\n      tip: \"Moving to next step, please wait ...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(Forum, {\n      content: formContent,\n      action: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), !isGame ? preGame : /*#__PURE__*/React.createElement(Game, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Charlie/Dropbox/Development/IRLL/hippoGym/Front/src/main.js"],"names":["React","axios","Spin","Header","Footer","Forum","Game","RLAPI","PROJECT_ID","USER_ID","Main","Component","state","formContent","userId","projectId","isLoading","isGame","fetchData","get","params","then","res","setState","data","handleSubmit","event","form","target","element","elements","tagName","name","value","post","catch","error","console","log","componentDidMount","render","preGame"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"antd/dist/antd.css\";\nimport './main.css';\nimport axios from 'axios';\nimport {Spin} from 'antd';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Forum from './components/forum';\nimport Game from './components/game';\nimport {RLAPI, PROJECT_ID, USER_ID} from './utils/constants';\n\nclass Main extends React.Component{\n\n    state = {\n        formContent : \"\",\n        userId : USER_ID,\n        projectId : PROJECT_ID,\n        isLoading : true,\n        isGame : false\n    }\n\n    componentDidMount(){\n        this.fetchData();\n    }\n\n    fetchData = () => {\n        axios.get(RLAPI,{\n            params : {\n                projectId : this.state.projectId,\n                userId : this.state.userId\n            }\n        }).then(res => {\n            this.setState(({\n                formContent : res.data,\n                isLoading : false\n            }))\n        })\n    }\n\n    handleSubmit = (event) => {\n        this.setState(({\n            isLoading : true\n        }))\n        const form = event.target;\n        const data = {}\n        for (let element of form.elements) {\n          if (element.tagName === 'BUTTON') { continue; }\n          data[element.name] = element.value;\n        }\n        axios.post(RLAPI,data,{\n            params : {\n                projectId : this.state.projectId,\n                userId : this.state.userId\n            }\n        }).then(res => {\n            if(res.data === \"pre-game end\"){\n                this.setState(({\n                    isLoading : true,\n                    isGame : true\n                }))\n            }else{\n                this.setState(({\n                    formContent : res.data,\n                    isLoading : false\n                }))\n            }\n        }).catch(function (error) {\n            console.log(error)\n          });\n    }\n\n    render(){\n        const {isLoading,formContent,isGame} = this.state;\n\n        const preGame =   <div className=\"forumContainer\">\n                            {isLoading ? \n                            <Spin className=\"Loader\" size = \"large\" tip=\"Moving to next step, please wait ...\" /> :\n                            <Forum content={formContent} action={this.handleSubmit}/> \n                            }\n                        </div>\n                            \n        return (\n            <div>\n                <Header />\n                {!isGame ? preGame : <Game />}\n                <Footer />\n            </div>   \n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}